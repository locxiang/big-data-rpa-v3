name: "publish"

on:
  push:
    branches:
      - release

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          # - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ""
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc --bundles msi,nsis"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          # 安装 Visual C++ Redistributable 2015-2022
          Write-Host "Installing Visual C++ Redistributable..." -ForegroundColor Yellow
          $vcRedistUrl = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
          $vcRedistPath = "$env:TEMP\vc_redist.x64.exe"
          Invoke-WebRequest -Uri $vcRedistUrl -OutFile $vcRedistPath
          Start-Process -FilePath $vcRedistPath -ArgumentList "/quiet", "/norestart" -Wait
          
          # 安装 WebView2 Runtime (确保最新版本)
          Write-Host "Installing WebView2 Runtime..." -ForegroundColor Yellow
          $webview2Url = "https://go.microsoft.com/fwlink/p/?LinkId=2124703"
          $webview2Path = "$env:TEMP\MicrosoftEdgeWebview2Setup.exe"
          Invoke-WebRequest -Uri $webview2Url -OutFile $webview2Path
          Start-Process -FilePath $webview2Path -ArgumentList "/silent", "/install" -Wait
          
          # 下载 npcap SDK
          Write-Host "Installing npcap SDK..." -ForegroundColor Yellow
          $npcapSdkUrl = "https://npcap.com/dist/npcap-sdk-1.15.zip"
          $npcapSdkPath = "$env:TEMP\npcap-sdk.zip"
          Invoke-WebRequest -Uri $npcapSdkUrl -OutFile $npcapSdkPath
          
          # 解压 SDK
          Expand-Archive -Path $npcapSdkPath -DestinationPath "$env:TEMP\npcap-sdk"
          
          # 创建目录并复制库文件到系统路径
          $libDir = "C:\Windows\System32"
          Copy-Item "$env:TEMP\npcap-sdk\Lib\x64\*.lib" -Destination $libDir
          
          # 设置环境变量
          echo "LIB=$env:LIB;$env:TEMP\npcap-sdk\Lib\x64" >> $env:GITHUB_ENV
          echo "INCLUDE=$env:INCLUDE;$env:TEMP\npcap-sdk\Include" >> $env:GITHUB_ENV

      - name: install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          tauriScript: pnpm tauri